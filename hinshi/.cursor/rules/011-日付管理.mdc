---
description:
globs:
alwaysApply: false
---
# 日付管理 [Always]

このルールはすべてのファイルにおける日付の取得・記録・管理に関する専門ルールです。

## 🚨 基本原則

### 手動入力の完全禁止
- **日付の手動入力は一切禁止**: "2025-12-30"のような手動入力は絶対に行わない
- **推測入力の禁止**: 概算や推測による日付入力も禁止
- **コピペ入力の禁止**: 過去の日付をコピーして再利用することも禁止

### 必須コマンド実行
- **PowerShell環境**: `Get-Date -Format "yyyy-MM-dd"`
- **Unix/Linux環境**: `date +%Y-%m-%d`  
- **コマンド実行の必須化**: 日付が必要な場合は必ずコマンド実行

## 適用範囲

### 全mdファイル
- **フロントマター**: lastUpdated、created、date等の日付フィールド
- **更新履歴**: 変更日の記録
- **バージョン情報**: 更新日の記録
- **コンテンツ内**: 本文中の日付記載

### READMEファイル
- **更新履歴セクション**: 各変更の日付記録
- **バージョン情報**: 主要ファイルの更新日
- **最終更新日**: ページ下部の日付
- **統計情報**: 作成日や更新日の記載

### mdcファイル
- **注意**: mdcファイルのフロントマターは評価・編集対象外
- **コンテンツ部分**: 本文中に日付記載がある場合のみ適用

## 日付取得プロセス

### 1. 作業開始時の必須手順
```powershell
# Windows PowerShell環境での日付取得
Get-Date -Format "yyyy-MM-dd"
```

```bash
# Unix/Linux環境での日付取得  
date +%Y-%m-%d
```

### 2. 取得結果の記録と活用
- **メモ保存**: 取得した日付を作業中メモとして保存
- **一貫使用**: 同一作業セッション内では同じ日付を使用
- **複数箇所適用**: すべての日付フィールドに同じ値を適用

### 3. 二重確認プロセス
- **編集前確認**: 既存日付との比較
- **編集後確認**: すべての日付フィールドの一致確認
- **コミット前確認**: 最終的な日付整合性の確認

## エラー防止対策

### 典型的なエラーパターン
1. **手動入力**: "2025-12-30"のような未来日付の手動入力
2. **推測入力**: "今日は2025年〇月〇日だから..."という推測
3. **複数日付混在**: 同一ファイル内で異なる日付が混在
4. **形式不統一**: YYYY-MM-DD以外の形式の使用

### 防止策
- **コマンド優先**: 日付が必要になったら即座にコマンド実行
- **結果確認**: コマンド実行結果を必ず確認してから使用
- **一括置換**: 同一ファイル内の日付は一括で同じ値に統一
- **形式統一**: 必ずYYYY-MM-DD形式で記録

## 特殊ケースの対応

### 過去の日付記録
- **歴史的記録**: 過去の変更履歴は変更しない
- **新規追加**: 新しい履歴エントリのみコマンド取得日付を使用
- **修正履歴**: 修正時点の正確な日付をコマンドで取得

### 複数ファイル同時更新
- **統一原則**: 同一作業セッション内は同じ日付を使用
- **再取得禁止**: 作業中の日付の再取得は避ける
- **記録保持**: 取得した日付を作業完了まで保持

### バージョン管理での日付
- **コミット日**: コミット実行時の日付をコマンドで取得
- **タグ付け**: タグ作成時の日付をコマンドで取得
- **リリース日**: リリース実行時の日付をコマンドで取得

## 品質管理

### 日付検証のチェックリスト
- [ ] **コマンド実行確認**: 必要な日付をコマンドで取得済み
- [ ] **手動入力回避**: 手動で日付を入力していない
- [ ] **形式統一**: YYYY-MM-DD形式で記録されている
- [ ] **一貫性確認**: 同一ファイル内の日付が統一されている
- [ ] **現実性確認**: 未来日付になっていない
- [ ] **複数ファイル整合性**: 関連ファイル間で日付が一致している

### エラー発見時の対処
1. **即座停止**: 手動入力日付を発見したら作業を停止
2. **コマンド実行**: 正確な日付をコマンドで取得
3. **一括修正**: 該当ファイルの全日付を正確な値に修正
4. **整合性確認**: 関連ファイルとの整合性を確認

## 作業フロー統合

### 編集開始時
```
1. 作業開始
2. 日付取得コマンド実行 ← 必須
3. 取得日付をメモ保存
4. 編集作業開始
```

### 編集完了時
```
1. 編集内容確認
2. 日付フィールド確認 ← 必須
3. コマンド取得日付との一致確認
4. 作業完了
```

### コミット前
```
1. 全ファイル確認
2. 日付整合性確認 ← 必須  
3. 手動入力がないことを確認
4. コミット実行
```

## 他ルールとの連携

### README管理との連携
- **010-README管理.mdc**: README更新時の日付管理を当ルールが担当
- **相互参照**: README更新プロセスで日付管理ルールを自動適用

### Git操作との連携  
- **009-Git操作管理.mdc**: コミット・タグ作成時の日付管理
- **相互参照**: Git操作時の日付記録を当ルールが管理

### 検証・品質管理との連携
- **006-検証・品質管理.mdc**: 日付品質の検証を当ルールが支援
- **チェックリスト統合**: 品質管理チェックに日付検証を組み込み

## 関連ファイル
- [[010-README管理.mdc]] - README更新時の日付管理
- [[009-Git操作管理.mdc]] - Git操作時の日付記録
- [[006-検証・品質管理.mdc]] - 日付品質の検証
- [[004-変更規模別ルール.mdc]] - 変更記録時の日付管理

## 適用条件
- 日付フィールドが含まれるファイルの編集時
- 新規ファイル作成時
- README更新時
- バージョン管理操作時
- 更新履歴記録時
