---
description: "TOEIC/Anki特化Git管理 - 006参照・コミット制約・学習保護・AI権限の専門ルール"
globs: ["**/*.md", "**/*.mdc", ".git/**"]
alwaysApply: false
---
# Git操作管理 [Conditional]

このルールはGit操作の安全な実行と管理に関する専門ルールです。

## 基本方針

### Git操作の安全性原則
- **慎重性**: 操作前の十分な確認
- **可逆性**: 取り消し可能な操作の優先
- **透明性**: 操作内容の明確な説明
- **段階性**: 一度に一つの操作を実行
- **学習継続性**: TOEIC学習・Anki連携の継続性確保

### 適用条件
- ユーザーからの明示的な許可がある場合
- 変更内容が明確に定義されている場合
- 安全性チェックをすべて通過した場合
- TOEIC表現・Anki設定への影響が評価済みの場合
- PowerShell操作の安定化が必要な場合（[[004-PowerShell操作ガイド.mdc]]との連携）
- Git差分分析での詳細確認が必要な場合（[[006-Git操作ガイド.mdc]]との連携）

## 操作前チェックリスト

### 必須確認事項
- [ ] **ユーザー許可**: Git操作の明示的な許可を得ている
- [ ] **変更内容確認**: `git status`で変更内容を確認済み
- [ ] **コミット前チェック**: [[103-変更規模別ルール.mdc]]のコミット前チェックリスト完了
- [ ] **作業ディレクトリ**: 正しいディレクトリで作業している
- [ ] **ブランチ確認**: 適切なブランチ（通常はmain）にいる

### TOEIC・Anki特化チェック
- [ ] **表現ファイル整合性**: 慣用句・句動詞ファイルの整合性確認
- [ ] **Anki設定保護**: Obsidian_to_ankiプラグイン設定の保護確認
- [ ] **タグ体系維持**: TOEIC表現タグ体系の一貫性確認
- [ ] **学習データ保護**: 学習進捗・統計データの保護確認

### 安全性チェック
- [ ] **機密情報**: コミット対象に機密情報が含まれていない
- [ ] **大容量ファイル**: 不適切な大容量ファイルが含まれていない
- [ ] **システムファイル**: 意図しないシステムファイルが含まれていない
- [ ] **バックアップ**: 重要な変更の場合は事前バックアップ済み
- [ ] **Anki連携**: Ankiデータベースへの影響がないことを確認

## Git操作の基本手順

### 基本Git操作の参照
**Git差分分析・基本コマンド・ページャー対策**: [[006-Git操作ガイド.mdc]] を参照
- Git差分の取得・分析・可視化
- PowerShell関数による変更規模分析
- AIエージェント実行時のページャー問題対策（`| cat` 使用）
- 汎用的なGit差分分析機能

### 1. 状況確認フェーズ（TOEIC/Anki特化）
**基本操作**: [[006-Git操作ガイド.mdc]] の基本Git差分コマンドを参照

**TOEIC/Anki特化確認項目**:
- TOEIC表現ファイルの変更状況（慣用句・句動詞ファイル）
- Anki関連設定ファイルの状態（.obsidian/plugins/obsidian-to-anki-plugin/）
- 学習データの整合性確認
- 表現間相互参照の影響確認

### 2. ステージングフェーズ（TOEIC/Anki特化制約）
**基本ステージング操作**: [[006-Git操作ガイド.mdc]] を参照

**TOEIC/Anki特化確認項目**:
- **必須確認**: Ankiプラグイン設定ファイル（.obsidian/plugins/）の意図しない変更
- **表現ファイル**: 慣用句・句動詞ファイルの相互参照整合性確認  
- **学習データ**: タグ構造・分類体系の一貫性確保
- **除外必須**: .ankiファイル、一時ファイル、バックアップファイル

### 3. コミットフェーズ（TOEIC/Anki特化）

#### 基本コミット制約の参照
**汎用的なコミット制約**: [[006-Git操作ガイド.mdc]] の「コミット管理の汎用基盤」を参照
- 50文字以内制限・改行禁止・特殊文字回避
- 基本的なエラー防止チェックリスト
- 文字数確認手順・安全なコミット実行方法

#### TOEIC/Anki特化コミットメッセージ生成

**TOEIC/Anki特化変更種別**:
1. **TOEIC表現ファイル変更** → `feat: [単語]表現完全実装`
2. **Anki設定変更** → `anki: [設定]最適化`
3. **学習システム変更** → `toeic: [機能]強化`
4. **表構造変更** → `feat: 表構造統一完了`
5. **慣用表現追加** → `feat: 慣用句管理ルール追加`

**学習効果最適化テクニック**:
- 「表現実装」→「表現完了」（1文字削減）
- 「管理システム」→「管理」（3文字削減）
- 「TOEIC学習効果」→「TOEIC効果」（2文字削減）
- 「Anki統合機能」→「Anki統合」（2文字削減）

### 4. プッシュフェーズ（TOEIC/Anki特化制約）
**基本プッシュ操作**: [[006-Git操作ガイド.mdc]] を参照

**TOEIC/Anki特化最終確認**:
- **学習継続性**: TOEIC学習プロセスへの影響が最小限
- **Anki連携**: Ankiプラグイン・カード生成への悪影響なし
- **表現整合性**: 慣用句・句動詞間の相互参照に問題なし

## コミットメッセージの規則

### 🚨 重要制約事項

#### 文字数制限（厳守）
- **最大50文字**: 1行メッセージの絶対上限
- **推奨30-40文字**: 可読性を考慮した推奨範囲
- **改行禁止**: 単一行メッセージのみ使用
- **特殊文字回避**: パイプ(|)・セミコロン(;)等の使用禁止

#### エラー防止チェックリスト
- [ ] **文字数確認**: 50文字以内であることを確認
- [ ] **改行確認**: 改行文字が含まれていないことを確認
- [ ] **引用符確認**: ダブルクォート内にダブルクォートが含まれていないことを確認
- [ ] **特殊文字確認**: コマンドライン問題を起こす文字が含まれていないことを確認

### 実用的基本形式

#### 基本形式・テンプレートの参照
**汎用的な標準形式・文字数別テンプレート**: [[006-Git操作ガイド.mdc]] の「コミットメッセージの汎用テンプレート」を参照
- 標準形式・汎用的な種類分類（feat, fix, docs, style, refactor, chore）
- 30/40/50文字別テンプレート・メッセージ作成支援

#### TOEIC・Anki特化種類（006基本種類に追加）
- **anki**: Anki関連の変更・設定最適化
- **toeic**: TOEIC特化機能の変更・学習効率向上

### TOEIC・Anki特化の簡潔パターン

#### 表現管理系
- `feat: [単語]表現完全実装`
- `feat: 慣用句管理ルール追加`
- `feat: 句動詞分類システム完了`
- `fix: 表現相互参照エラー修正`

#### システム管理系
- `feat: README管理システム追加`
- `feat: 品質検証システム完了`
- `fix: Ankiラベル整合性修正`
- `docs: 学習ガイド更新`

#### 学習効率系
- `toeic: Part別優先度最適化`
- `anki: カード生成効率向上`
- `feat: 学習フロー改善完了`

### 🚫 TOEIC/Anki特化での使用禁止パターン

#### 汎用的禁止パターンの参照
**基本的な使用禁止パターン**: [[006-Git操作ガイド.mdc]] の「使用禁止パターン（汎用）」を参照
- 長すぎるメッセージ・改行を含むメッセージ・特殊文字問題の基本例

#### TOEIC/Anki特化での禁止例（参考）
```
❌ feat: 表構造管理システム完全統合 - 107-README管理・慣用表現一覧管理新規追加・Anki文例セクション管理更新
❌ anki: プラグイン設定最適化
   - デッキ統合完了  
   - カード生成効率向上
❌ toeic: 学習システム|Anki統合;表現管理完了
```

### ✅ TOEIC/Anki特化の推奨パターン

#### 汎用的メッセージ作成手順の参照
**基本的なメッセージ作成手順**: [[006-Git操作ガイド.mdc]] の「メッセージ作成支援」を参照
- 変更種別の自動判定・文字数最適化テクニック・文字数確認手順

#### TOEIC/Anki特化での適切な例
```
✅ feat: 表構造管理システム統合完了
✅ anki: デッキ生成効率最適化完了
✅ toeic: Part別学習順序改善完了
✅ feat: 慣用表現相互参照強化完了
```

#### TOEIC/Anki特化チェック項目（006基本チェック + 追加）
- [ ] **学習効果**: 変更がTOEIC学習効果向上に貢献するか
- [ ] **Anki統合**: Obsidian_to_ankiプラグイン整合性が保たれるか
- [ ] **表現整合性**: 慣用句・句動詞間の相互参照が維持されるか
- [ ] **タグ体系**: TOEIC表現タグ体系との整合性があるか

## エラー処理と復旧（TOEIC/Anki特化）

### 基本エラー処理の参照
**一般的なGitエラー対処・復旧手順**: [[006-Git操作ガイド.mdc]] のエラー処理セクションを参照
- 基本的なGitエラー対処・コマンドライン問題・ページャー問題の解決方法

### TOEIC・Anki特化エラー対応

#### Anki設定破損時
1. **即座停止**: Git操作を停止
2. **設定確認**: .obsidian/plugins/obsidian-to-anki-plugin/ の状態確認
3. **バックアップ復元**: Anki設定の事前バックアップからの復元
4. **連携確認**: Obsidian_to_ankiプラグインの動作確認

#### TOEIC表現データ破損時
1. **影響範囲特定**: 破損した表現ファイルの特定
2. **学習継続性確保**: 緊急用表現リストでの学習継続
3. **データ復旧**: 最新の正常バックアップからの復元
4. **整合性確認**: 表現間相互参照の整合性確認

## 自動化可能な操作

### 安全な自動化対象
- `git status` - 状況確認
- `git add .` - ステージング（確認後）
- `git commit -m "[メッセージ]"` - コミット（メッセージ確認後）
- `git push` - プッシュ（確認後）

### 手動確認が必要な操作
- `git reset` - 取り消し操作
- `git merge` - マージ操作
- `git rebase` - リベース操作
- `git branch -d` - ブランチ削除
- Anki設定ファイルの変更
- TOEIC表現分類の大幅変更

## 定期メンテナンス

### 週次チェック項目
- [ ] リモートリポジトリとの同期状況確認
- [ ] 不要なファイルの確認
- [ ] コミット履歴の整理状況確認
- [ ] TOEIC表現ファイルの整合性確認
- [ ] Anki連携の正常性確認

### 月次チェック項目
- [ ] .gitignoreファイルの見直し
- [ ] リポジトリサイズの確認
- [ ] バックアップ状況の確認
- [ ] TOEIC学習効果の統計更新
- [ ] Anki学習データの最適化

### TOEIC・Anki特化メンテナンス
- [ ] **表現データベース整合性**: 全表現ファイル間の相互参照確認
- [ ] **タグ体系一貫性**: TOEIC表現タグの統一性確認
- [ ] **Anki統合状況**: プラグイン連携・カード生成の正常性確認
- [ ] **学習統計更新**: スコア向上・定着率等の統計情報更新

## 権限と責任

### AI（Claude）の権限

#### 許可された操作
- **status確認**: `git status`、`git branch`、`git log`
- **ステージング**: `git add .`（確認後）
- **コミット**: `git commit -m "[メッセージ]"`（検証後）
- **プッシュ**: `git push`（確認後）

#### 制限された操作
- **reset**: `git reset`（取り消し操作）
- **merge**: `git merge`（マージ操作）
- **branch操作**: ブランチ作成・削除
- **設定変更**: Git設定の変更
- **Anki設定変更**: プラグイン設定の変更

#### AI実行時の必須制約
- **ユーザー許可**: 明示的な許可の確認
- **メッセージ検証**: 50文字以内・改行なし・特殊文字なしの確認
- **文字数自動チェック**: コミット前の文字数確認実行
- **エラー予防**: 問題のあるメッセージでの実行回避
- **TOEIC・Anki制約**: 学習継続性を最優先に考慮

#### コミットメッセージ自動検証手順
1. **文字数カウント**: メッセージの文字数を事前確認
2. **特殊文字検出**: 問題となる文字の有無確認
3. **改行検出**: 改行文字の有無確認
4. **長さ調整**: 50文字超過時の自動短縮提案
5. **安全実行**: 検証通過後のコミット実行

### ユーザーの責任
- **最終確認**: すべてのGit操作の最終承認
- **バックアップ**: 重要なデータのバックアップ
- **設定管理**: Git設定の管理と維持
- **学習データ管理**: TOEIC学習進捗・Anki学習データの管理
- **Anki設定管理**: Obsidian_to_ankiプラグイン設定の管理

## 緊急時対応

### 重大な問題発生時
1. **即座停止**: すべてのGit操作を停止
2. **状況報告**: 問題の詳細をユーザーに報告
3. **学習影響評価**: TOEIC学習・Anki学習への影響度評価
4. **権限移譲**: ユーザーによる手動対応を推奨
5. **学習記録**: 問題の原因と対策を記録

### 復旧支援
- 問題の診断支援
- 復旧手順の提案
- 予防策の提案
- TOEIC学習・Anki学習の継続支援

### 学習継続性確保
- **緊急時表現リスト**: 基本的なTOEIC表現の緊急用リスト提供
- **代替学習方法**: Git復旧中の代替学習方法提案
- **進捗保護**: 学習進捗データの保護・復旧支援

## 特別考慮事項

### TOEIC学習継続性
- **定期更新**: TOEIC傾向変化に対応した定期的な表現更新
- **学習最適化**: 学習者の進捗に応じた表現優先度調整
- **効果測定**: Git操作がTOEIC学習効果に与える影響測定

### Anki統合保護
- **プラグイン互換性**: Obsidian_to_ankiプラグインの更新への対応
- **カードデータ保護**: Ankiカードデータの整合性保護
- **同期安定性**: Obsidian-Anki間の同期安定性確保

### バックアップ戦略
- **多層バックアップ**: Git、Obsidian、Ankiの多層バックアップ
- **自動バックアップ**: 重要な表現変更時の自動バックアップ
- **復旧テスト**: 定期的なバックアップ復旧テストの実施

## 関連ファイル
- [[103-変更規模別ルール.mdc]] - コミット前チェックリスト
- [[001-AI実装ガイドライン.mdc]] - AI操作の基本制約
- [[105-検証・品質管理.mdc]] - 品質管理プロセス
- [[100-基本方針.mdc]] - TOEIC学習・Anki特化の基本方針
- [[107-README管理.mdc]] - README.mdの管理と更新

## 適用条件
- Git操作の実行時
- TOEIC表現リポジトリ管理の変更時
- Anki統合システムの更新時
- バージョン管理システムの運用時
- 緊急時の復旧作業時
- TOEIC学習データの管理時
