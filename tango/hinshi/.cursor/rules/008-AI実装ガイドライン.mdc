---
description: "AI実装ガイドライン（常時適用・最優先制約）"
globs: ["**/*.md", "**/*.mdc"]
tags: ["ai-implementation", "safety-constraints", "always-apply"]
priority: 0
version: "1.0.0"
alwaysApply: true
---
# AI実装ガイドライン [Always]

このルールはAIエージェントがシステムを正しく理解・実装するための専用ガイドラインです。

## 🚨 絶対的制約事項

### フロントマター取扱い
```
🚫 mdcファイル（ルールファイル）の制約:
- mdcファイルのYAML frontmatter（--- で囲まれた部分）の評価・指摘は禁止
- フロントマター関連問題の報告は禁止
- フロントマターの修正提案は禁止
- **ファイル冒頭付近の --- の削除・移動は禁止**
- **フロントマター終了の --- の削除・移動は禁止**

✅ mdファイル（コンテンツファイル）の推奨:
- mdファイルのYAML frontmatterの適切な管理・評価
- タグ設定の確認・改善提案
- title・description等の品質評価
- フロントマター構造の最適化提案
- コンテンツ部分（# 見出し以降）の編集・評価
```

### mdcファイルのフロントマター構造保護
```yaml
mdcファイルの正常な構造:
---
description: ...
globs: ...
alwaysApply: true
---

# タイトル
コンテンツ...
```

**絶対保護対象**:
- ファイル冒頭の `---`（フロントマター開始）
- フロントマター終了の `---`（コンテンツ開始前）
- 両者の間のYAML設定内容

### ファイル種別の明確な区別
```yaml
mdcファイル（ルール定義）:
場所: .cursor/rules/内
拡張子: .mdc
フロントマター: 評価対象外（触らない）
コンテンツ: 評価対象

mdファイル（学習コンテンツ）:
場所: ワークスペースルート
拡張子: .md  
フロントマター: 評価対象（積極的に改善）
コンテンツ: 評価対象
```

## 編集実行時の制約

### 必須確認事項
1. **編集対象の特定**: mdかmdcかを明確に識別
2. **制約範囲の確認**: フロントマター除外の適用
3. **権限範囲の確認**: ユーザー専有領域の回避
4. **mdcファイル編集時の構造確認**:
   - ファイル先頭の `---` が保持されているか
   - フロントマター終了の `---` が保持されているか
   - `# タイトル` より前の領域が未変更か

### mdcファイル編集の安全手順
```
編集前チェック:
☑️ ファイルが .mdc .md のどちらの拡張子か確認
☑️ 拡張子が.mdの場合のみフロントマター構造の現状把握
☑️ 編集対象が # 見出し以降のコンテンツ部分か確認

編集実行時:
☑️ 先頭から5行目以内に --- 区切り文字があった場合、それより上は絶対に触らない
☑️ YAML部分（description, globs等）を絶対に変更しない
☑️ コンテンツ部分のみに編集を限定

編集後検証:
☑️ .mdcファイルの場合はフロントマター構造検証しない
```

### 実装時の優先順位
AI実装時の詳細な優先順位体系は **[[003-基本編集ルール.mdc]]** で定義されています。
基本的な実装優先順位：
```
優先度1: ユーザー指示の正確な実行
優先度2: 既存システムの整合性維持  
優先度3: 追加品質改善の提案
```

## エラー処理方針

### mdcファイル誤修正時
- **即座停止**: フロントマター修正の検出時
- **権限移譲**: ユーザーによる手動修正待ち
- **作業継続**: コンテンツ部分の編集は継続

### 矛盾解決の優先順位
1. ユーザーの明示的指示
2. 安全性・整合性の確保
3. ルールの文言的遵守

## コミュニケーション方針

### 報告スタイル
- **簡潔性**: 冗長な説明の回避
- **焦点化**: 要求された変更に集中
- **建設性**: 解決策中心の提案

### 確認プロセス
- **事前確認**: 大規模変更時のユーザー承認
- **事後報告**: 実装完了の簡潔な確認
- **例外報告**: 制約に抵触した場合のみ

## 関連ファイル
- [[003-基本編集ルール.mdc]] - 基本的な編集制約
- [[006-検証・品質管理.mdc]] - 品質管理プロセス
- [[001-基本方針.mdc]] - 全体的な方針

## 関連ルールとの連携

### Always適用ルールとしての位置づけ
**[当ルール]**: AI実装ガイドライン [Always]
- **役割**: AIエージェントの安全な動作を保証する最優先制約
- **適用範囲**: 全mdcファイル編集・全AI操作
- **制約レベル**: 絶対的（例外なし）

### 基盤ルールとの相互関係
- **[[001-基本方針.mdc]]**: 学習システムの根本方針  
  - **関係性**: 当ルールが基本方針の安全な実装を保証
  - **連携**: 基本方針→AI実装→安全な実行
  - **制約継承**: タグ設定原則をAI制約下で実行

- **[[003-基本編集ルール.mdc]]**: 編集作業の基本制約
  - **関係性**: 当ルールが003の安全な適用を保証
  - **優先順位**: 008 > 003（安全性優先）
  - **制約適用**: mdcファイル編集時の絶対制約

### 実装レベルルールとの関係
- **[[004-変更規模別ルール.mdc]]**: 変更プロセス管理
  - **関係性**: 当ルールが004の安全な実行を保証
  - **制約範囲**: mdcファイル編集時の特別ルール（当ルールで詳細規定）
  - **連携**: 規模判定→プロセス選択→AI制約下実行

- **[[005-品詞分類管理.mdc]]**: 品詞特化専門ルール  
  - **関係性**: 品詞関連mdcファイル編集時の制約適用
  - **安全確保**: 005適用時のフロントマター保護

### 検証・品質管理ルールとの関係
- **[[006-検証・品質管理.mdc]]**: 検証・品質管理
  - **関係性**: 当ルールが006の検証プロセスでの安全性を保証
  - **フロントマター処理**: mdファイル積極評価・mdcファイル評価除外
  - **連携**: AI制約遵守→検証実行→品質確認

- **[[007-全体相互参照管理.mdc]]**: 相互参照システム管理
  - **関係性**: 大規模相互参照変更時のAI制約適用
  - **安全確保**: 複数mdcファイル同時編集時の制約

### メタルールとの関係
- **[[000-mdc-best-practices.mdc]]**: mdcファイル管理規範
  - **関係性**: 当ルールが000のベストプラクティスをAI視点で具体化
  - **制約実装**: 000の理論→008の実装制約
  - **安全基準**: 000の方針を008で技術的に実現

- **[[002-修正の時のルール.mdc]]**: 統合ガイド
  - **関係性**: 002が当ルールを含む全ルールの案内役
  - **位置づけ**: 002→ルール選択→008制約下実行

### エラー処理・安全性での中核的役割

#### mdcファイル誤修正時の最高権威
```yaml
権限階層:
008-AI実装ガイドライン (最高権威)
  ↓ 制約定義
他の全ルール (制約適用下で動作)
  ↓ 安全な実行  
実際の編集作業 (制約保護下で実施)
```

#### 制約の伝播経路
- **直接制約**: mdcファイル編集時の即座適用
- **間接制約**: 他ルール経由での制約継承
- **絶対制約**: いかなる状況でも例外なし

### AI実装時の優先順位での位置
```yaml
Priority 0 (Meta): 008-AI実装ガイドライン
Priority 1: ユーザー指示・安全性・Always適用ルール  
Priority 2: 変更規模別・品詞固有・検証ルール
Priority 3: 相互参照・修正時ルール
```

### 実際のルール適用フローでの役割
```
全作業開始
    ↓
008制約確認 (必須・自動)
    ↓
ファイル種別判定 (.md/.mdc)
    ↓         ↓
mdファイル   mdcファイル
    ↓         ↓
通常フロー   008厳格制約下
    ↓         ↓
他ルール適用  コンテンツのみ編集
    ↓         ↓
完了確認     安全性優先完了
```

### システム全体の安全性への貢献
- **破滅的事故防止**: フロントマター破損の完全防止
- **権限分離**: AI/ユーザー権限の明確な分離
- **安全優先文化**: 完成度より安全性を優先する文化の確立
- **復旧方針**: 事故発生時の適切な対応手順の確立

### 他ルールでの当ルール参照方法
- **必須参照**: Always適用ルールとして自動適用
- **明示参照**: AI実装時制約として他ルールから明示的参照
- **制約継承**: 他ルールが当ルールの制約を前提として記述





